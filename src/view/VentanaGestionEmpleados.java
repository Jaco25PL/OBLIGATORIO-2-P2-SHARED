/**
 * Autores: [Matias Piedra 354007] y [Joaquin Piedra 304804]
 */
package view;

import controlador.EmpleadoControlador;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.Empleado;

public class VentanaGestionEmpleados extends javax.swing.JFrame {

    private EmpleadoControlador controlador;
    
    public VentanaGestionEmpleados(EmpleadoControlador controlador) {
        this.controlador = controlador;
        
        initComponents();
        
        actualizarListaEmpleados();

        ClaroOscuro.aplicarModo(this);
        
        //Listener para la Lista
        jListEmpleados.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            @Override
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                if (!evt.getValueIsAdjusting()) {
                    mostrarEmpleadoSeleccionado();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelGestionEmpleados = new javax.swing.JPanel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelDireccion = new javax.swing.JLabel();
        jLabelCedula = new javax.swing.JLabel();
        jLabelNumEmpleado = new javax.swing.JLabel();
        jLabelClientes = new javax.swing.JLabel();
        jButtonVaciar = new javax.swing.JButton();
        jButtonAgregar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldDireccion = new javax.swing.JTextField();
        jTextFieldCedula = new javax.swing.JTextField();
        jTextFieldNumEmpleado = new javax.swing.JTextField();
        jScrollPaneEmpleados = new javax.swing.JScrollPane();
        jListEmpleados = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión de Empleados");
        getContentPane().setLayout(null);

        jPanelGestionEmpleados.setLayout(null);

        jLabelNombre.setText("Nombre");
        jPanelGestionEmpleados.add(jLabelNombre);
        jLabelNombre.setBounds(37, 100, 60, 16);

        jLabelDireccion.setText("Direccion");
        jPanelGestionEmpleados.add(jLabelDireccion);
        jLabelDireccion.setBounds(37, 140, 60, 16);

        jLabelCedula.setText("Cédula");
        jPanelGestionEmpleados.add(jLabelCedula);
        jLabelCedula.setBounds(200, 100, 50, 16);

        jLabelNumEmpleado.setText("N° Empleado");
        jPanelGestionEmpleados.add(jLabelNumEmpleado);
        jLabelNumEmpleado.setBounds(200, 140, 80, 16);

        jLabelClientes.setText("Empleados");
        jPanelGestionEmpleados.add(jLabelClientes);
        jLabelClientes.setBounds(387, 50, 60, 16);

        jButtonVaciar.setText("Vaciar");
        jButtonVaciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVaciarActionPerformed(evt);
            }
        });
        jPanelGestionEmpleados.add(jButtonVaciar);
        jButtonVaciar.setBounds(40, 280, 90, 27);

        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });
        jPanelGestionEmpleados.add(jButtonAgregar);
        jButtonAgregar.setBounds(150, 280, 170, 27);

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        jPanelGestionEmpleados.add(jButtonEliminar);
        jButtonEliminar.setBounds(340, 280, 130, 27);
        jPanelGestionEmpleados.add(jTextFieldNombre);
        jTextFieldNombre.setBounds(110, 100, 68, 26);
        jPanelGestionEmpleados.add(jTextFieldDireccion);
        jTextFieldDireccion.setBounds(110, 140, 68, 26);
        jPanelGestionEmpleados.add(jTextFieldCedula);
        jTextFieldCedula.setBounds(290, 100, 70, 26);
        jPanelGestionEmpleados.add(jTextFieldNumEmpleado);
        jTextFieldNumEmpleado.setBounds(290, 140, 75, 26);

        jListEmpleados.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPaneEmpleados.setViewportView(jListEmpleados);

        jPanelGestionEmpleados.add(jScrollPaneEmpleados);
        jScrollPaneEmpleados.setBounds(380, 80, 100, 150);

        getContentPane().add(jPanelGestionEmpleados);
        jPanelGestionEmpleados.setBounds(0, 0, 500, 350);

        setBounds(0, 0, 514, 358);
    }// </editor-fold>//GEN-END:initComponents

    public void mostrarEmpleadoSeleccionado() {
        String seleccionado = jListEmpleados.getSelectedValue();
        
        if (seleccionado != null) {
            try {
                int cedula = Integer.parseInt(seleccionado.split(" - ")[1]);
                Empleado empleado = controlador.buscarEmpleadoPorCedula(cedula);
                
                if (empleado != null) {
                    jTextFieldNombre.setText(empleado.getNombre());
                    jTextFieldCedula.setText(String.valueOf(empleado.getCedula()));
                    jTextFieldDireccion.setText(empleado.getDireccion());
                    jTextFieldNumEmpleado.setText(String.valueOf(empleado.getNumEmpleado()));                }
            } catch (Exception e) {
                ClaroOscuro.mostrarError(this, "Error al cargar datos del empleado: " + e.getMessage(), 
                "Error");
            }
        }
    }
    
    private void limpiarCampos(){
        jTextFieldNombre.setText("");
        jTextFieldCedula.setText("");
        jTextFieldDireccion.setText("");
        jTextFieldNumEmpleado.setText("");
    }
    
    private void actualizarListaEmpleados(){
        ArrayList<Empleado> empleados = controlador.getListaEmpleados();
        DefaultListModel<String> modelo = new DefaultListModel<>();

        for (int i = 0; i < empleados.size(); i++) {
            Empleado empleado = empleados.get(i);
            modelo.addElement(empleado.getNombre() + " - " + empleado.getCedula());
        }

        jListEmpleados.setModel(modelo);
    }
    
    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        
        try {
            String nombre = jTextFieldNombre.getText();
            String cedula = jTextFieldCedula.getText();
            String direccion = jTextFieldDireccion.getText();
            String numEmpleado = jTextFieldNumEmpleado.getText();

            controlador.registrarEmpleado(nombre, cedula, direccion, numEmpleado);            actualizarListaEmpleados();

            ClaroOscuro.mostrarMensaje(this, "Empleado agregado con éxito", "Éxito");

            limpiarCampos();

        } catch (Exception e) {
            ClaroOscuro.mostrarError(this, e.getMessage(), "Error");
        }
        
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonVaciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVaciarActionPerformed
        limpiarCampos();
        jListEmpleados.clearSelection();
    }//GEN-LAST:event_jButtonVaciarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        
        try {
            String seleccionado = jListEmpleados.getSelectedValue();            if (seleccionado == null) {
                ClaroOscuro.mostrarAdvertencia(this, "Debe seleccionar un empleado para eliminar",
                        "Selección requerida");
                return;
            }

            int cedula = Integer.parseInt(seleccionado.split(" - ")[1]);

            int confirmacion = ClaroOscuro.mostrarConfirmacion(this,
                    "¿Está seguro que desea eliminar este empleado?",
                    "Confirmar eliminación");

            if (confirmacion == JOptionPane.YES_OPTION) {
                controlador.eliminarEmpleado(cedula);

                actualizarListaEmpleados();
                ClaroOscuro.mostrarMensaje(this, "Empleado eliminado con éxito", "Éxito");
                limpiarCampos();
            }
        } catch (Exception e) {
            ClaroOscuro.mostrarError(this, e.getMessage(), "Error");
        }
        
    }//GEN-LAST:event_jButtonEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonVaciar;
    private javax.swing.JLabel jLabelCedula;
    private javax.swing.JLabel jLabelClientes;
    private javax.swing.JLabel jLabelDireccion;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelNumEmpleado;
    private javax.swing.JList<String> jListEmpleados;
    private javax.swing.JPanel jPanelGestionEmpleados;
    private javax.swing.JScrollPane jScrollPaneEmpleados;
    private javax.swing.JTextField jTextFieldCedula;
    private javax.swing.JTextField jTextFieldDireccion;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldNumEmpleado;
    // End of variables declaration//GEN-END:variables
}
