/**
 * Autores: [Matias Piedra 354007] y [Joaquin Piedra 304804]
 */
package view;

import controlador.ClienteControlador;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.Cliente;

public class VentanaGestionClientes extends javax.swing.JFrame {
    
    private ClienteControlador controlador;
    
    public VentanaGestionClientes(ClienteControlador controlador) {
        this.controlador = controlador;
        
        initComponents();
        
        jPanelGestionClientes.setBounds(0,0, this.getWidth(), this.getHeight());
        
        actualizarListaClientes();
        
        ClaroOscuro.aplicarModo(this);
        
        //Listener para la Lista
        jListClientes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            @Override
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                if (!evt.getValueIsAdjusting()) {
                    mostrarClienteSeleccionado();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelGestionClientes = new javax.swing.JPanel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelDireccion = new javax.swing.JLabel();
        jLabelCelular = new javax.swing.JLabel();
        jLabelCedula = new javax.swing.JLabel();
        jLabelAño = new javax.swing.JLabel();
        jLabelClientes = new javax.swing.JLabel();
        jButtonVaciar = new javax.swing.JButton();
        jButtonAgregar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldDireccion = new javax.swing.JTextField();
        jTextFieldCelular = new javax.swing.JTextField();
        jTextFieldCedula = new javax.swing.JTextField();
        jTextFieldAñoCliente = new javax.swing.JTextField();
        jScrollPaneClientes = new javax.swing.JScrollPane();
        jListClientes = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión de Clientes");
        getContentPane().setLayout(null);

        jPanelGestionClientes.setLayout(null);

        jLabelNombre.setText("Nombre");
        jPanelGestionClientes.add(jLabelNombre);
        jLabelNombre.setBounds(37, 100, 60, 16);

        jLabelDireccion.setText("Direccion");
        jPanelGestionClientes.add(jLabelDireccion);
        jLabelDireccion.setBounds(37, 140, 60, 16);

        jLabelCelular.setText("Celular");
        jPanelGestionClientes.add(jLabelCelular);
        jLabelCelular.setBounds(37, 180, 60, 16);

        jLabelCedula.setText("Cédula");
        jPanelGestionClientes.add(jLabelCedula);
        jLabelCedula.setBounds(207, 100, 50, 16);

        jLabelAño.setText("Año");
        jPanelGestionClientes.add(jLabelAño);
        jLabelAño.setBounds(212, 140, 30, 16);

        jLabelClientes.setText("Clientes");
        jPanelGestionClientes.add(jLabelClientes);
        jLabelClientes.setBounds(387, 50, 60, 16);

        jButtonVaciar.setText("Vaciar");
        jButtonVaciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVaciarActionPerformed(evt);
            }
        });
        jPanelGestionClientes.add(jButtonVaciar);
        jButtonVaciar.setBounds(40, 280, 90, 27);

        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });
        jPanelGestionClientes.add(jButtonAgregar);
        jButtonAgregar.setBounds(150, 280, 170, 27);

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        jPanelGestionClientes.add(jButtonEliminar);
        jButtonEliminar.setBounds(340, 280, 130, 27);
        jPanelGestionClientes.add(jTextFieldNombre);
        jTextFieldNombre.setBounds(110, 100, 68, 26);
        jPanelGestionClientes.add(jTextFieldDireccion);
        jTextFieldDireccion.setBounds(110, 140, 68, 26);
        jPanelGestionClientes.add(jTextFieldCelular);
        jTextFieldCelular.setBounds(110, 180, 68, 26);
        jPanelGestionClientes.add(jTextFieldCedula);
        jTextFieldCedula.setBounds(270, 100, 70, 26);
        jPanelGestionClientes.add(jTextFieldAñoCliente);
        jTextFieldAñoCliente.setBounds(270, 140, 75, 26);

        jListClientes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPaneClientes.setViewportView(jListClientes);

        jPanelGestionClientes.add(jScrollPaneClientes);
        jScrollPaneClientes.setBounds(380, 80, 100, 150);

        getContentPane().add(jPanelGestionClientes);
        jPanelGestionClientes.setBounds(0, 0, 500, 350);

        setBounds(0, 0, 514, 358);
    }// </editor-fold>//GEN-END:initComponents

    private void mostrarClienteSeleccionado() {
        String seleccionado = jListClientes.getSelectedValue();

        if (seleccionado != null) {
            try {
                int cedula = Integer.parseInt(seleccionado.split(" - ")[1]);
                Cliente cliente = controlador.buscarClientePorCedula(cedula);

                if (cliente != null) {
                    jTextFieldNombre.setText(cliente.getNombre());
                    jTextFieldCedula.setText(String.valueOf(cliente.getCedula()));
                    jTextFieldDireccion.setText(cliente.getDireccion());
                    jTextFieldCelular.setText(String.valueOf(cliente.getCelular()));
                    jTextFieldAñoCliente.setText(String.valueOf(cliente.getAñoCliente()));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al cargar datos del cliente: " + e.getMessage(), 
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    private void limpiarCampos(){
        jTextFieldNombre.setText("");
        jTextFieldCedula.setText("");
        jTextFieldDireccion.setText("");
        jTextFieldCelular.setText("");
        jTextFieldAñoCliente.setText("");
    }
    
    private void actualizarListaClientes(){
        ArrayList<Cliente> clientes = controlador.getListaClientes();
        DefaultListModel<String> modelo = new DefaultListModel<>();
        
        for (int i = 0; i < clientes.size(); i++) {
            Cliente cliente = clientes.get(i);
            modelo.addElement(cliente.getNombre() + " - " + cliente.getCedula());
        }
        
        jListClientes.setModel(modelo);
    }
    
    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed

        try {
            String nombre = jTextFieldNombre.getText();
            String cedula = jTextFieldCedula.getText();
            String direccion = jTextFieldDireccion.getText();
            String celular = jTextFieldCelular.getText();
            String añoCliente = jTextFieldAñoCliente.getText();
            
            controlador.registrarCliente(nombre, cedula, direccion, celular, añoCliente);
            
            actualizarListaClientes();
            
            JOptionPane.showMessageDialog(this, "Cliente agregado con éxito");
            
            limpiarCampos();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
            
        try {
            String seleccionado = jListClientes.getSelectedValue();

            if (seleccionado == null) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar un cliente para eliminar", 
                    "Selección requerida", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            int cedula = Integer.parseInt(seleccionado.split(" - ")[1]);
            
            int confirmacion = JOptionPane.showConfirmDialog(this,
                    "¿Está seguro que desea eliminar este cliente?\nEsto eliminará también todos sus contratos.", 
                    "Confirmar eliminación",
                    JOptionPane.YES_NO_OPTION);
            
            if (confirmacion == JOptionPane.YES_OPTION) {
                controlador.eliminarCliente(cedula);
                
                actualizarListaClientes();
                JOptionPane.showMessageDialog(this, "Cliente eliminado con éxito");
                limpiarCampos();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonVaciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVaciarActionPerformed
        limpiarCampos();
        jListClientes.clearSelection();
    }//GEN-LAST:event_jButtonVaciarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonVaciar;
    private javax.swing.JLabel jLabelAño;
    private javax.swing.JLabel jLabelCedula;
    private javax.swing.JLabel jLabelCelular;
    private javax.swing.JLabel jLabelClientes;
    private javax.swing.JLabel jLabelDireccion;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JList<String> jListClientes;
    private javax.swing.JPanel jPanelGestionClientes;
    private javax.swing.JScrollPane jScrollPaneClientes;
    private javax.swing.JTextField jTextFieldAñoCliente;
    private javax.swing.JTextField jTextFieldCedula;
    private javax.swing.JTextField jTextFieldCelular;
    private javax.swing.JTextField jTextFieldDireccion;
    private javax.swing.JTextField jTextFieldNombre;
    // End of variables declaration//GEN-END:variables
}
