/**
 * Autores: [Matias Piedra 354007] y [Joaquin Piedra 304804]
 */
package view;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import model.Empleado;
import model.Entrada;
import model.Salida;
import model.Sistema;
import model.Vehiculo;
import util.ValidadorFechaHora;

public class VentanaSalidas extends javax.swing.JFrame implements PropertyChangeListener{
    
    private Sistema sistema;

    public VentanaSalidas(Sistema sistema) {
        this.sistema = sistema;
        
        initComponents();
        
        sistema.addPropertyChangeListener(this);

        actualizarListaEntradas();
        actualizarListaEmpleados();
        
        jTextFieldFecha.setText(ValidadorFechaHora.getFechaActual());
        jTextFieldHora.setText(ValidadorFechaHora.getHoraActual());

        ClaroOscuro.aplicarModo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelSalidas = new javax.swing.JPanel();
        jLabelFecha = new javax.swing.JLabel();
        jButtonVaciar = new javax.swing.JButton();
        jButtonAgregar = new javax.swing.JButton();
        jTextFieldFecha = new javax.swing.JTextField();
        jTextFieldHora = new javax.swing.JTextField();
        jLabelHora = new javax.swing.JLabel();        jScrollPaneEntradas = new javax.swing.JScrollPane();
        jListEntradas = new javax.swing.JList();
        jLabelEntradas = new javax.swing.JLabel();
        jScrollPaneEmpleados = new javax.swing.JScrollPane();
        jListEmpleados = new javax.swing.JList();
        jLabelEmpleados = new javax.swing.JLabel();
        jLabelNotas = new javax.swing.JLabel();
        jLabelTiempoEnParking = new javax.swing.JLabel();
        jLabelTiempoEnParkingRespuesta = new javax.swing.JLabel();
        jTextFieldNotas = new javax.swing.JTextField();
        jLabelTieneContratoRespuesta = new javax.swing.JLabel();
        jLabelTieneContrato = new javax.swing.JLabel();
        jLabelFecha1 = new javax.swing.JLabel();
        jLabelFecha2 = new javax.swing.JLabel();
        jLabelFecha3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Salidas");
        getContentPane().setLayout(null);

        jPanelSalidas.setLayout(null);

        jLabelFecha.setText("hh:mm 24hs");
        jPanelSalidas.add(jLabelFecha);
        jLabelFecha.setBounds(230, 80, 110, 16);

        jButtonVaciar.setText("Vaciar");
        jButtonVaciar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonVaciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVaciarActionPerformed(evt);
            }
        });
        jPanelSalidas.add(jButtonVaciar);
        jButtonVaciar.setBounds(10, 250, 120, 27);

        jButtonAgregar.setText("Agregar");
        jButtonAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });
        jPanelSalidas.add(jButtonAgregar);
        jButtonAgregar.setBounds(130, 250, 240, 27);
        jPanelSalidas.add(jTextFieldFecha);
        jTextFieldFecha.setBounds(60, 40, 160, 26);
        jPanelSalidas.add(jTextFieldHora);
        jTextFieldHora.setBounds(60, 80, 160, 26);

        jLabelHora.setText("Hora:");
        jPanelSalidas.add(jLabelHora);
        jLabelHora.setBounds(10, 80, 50, 16);

        jListEntradas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListEntradas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListEntradasValueChanged(evt);
            }
        });
        jScrollPaneEntradas.setViewportView(jListEntradas);

        jPanelSalidas.add(jScrollPaneEntradas);
        jScrollPaneEntradas.setBounds(380, 40, 180, 100);

        jLabelEntradas.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelEntradas.setText("Lista de Entradas");
        jPanelSalidas.add(jLabelEntradas);
        jLabelEntradas.setBounds(380, 10, 110, 16);

        jListEmpleados.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPaneEmpleados.setViewportView(jListEmpleados);

        jPanelSalidas.add(jScrollPaneEmpleados);
        jScrollPaneEmpleados.setBounds(380, 180, 180, 100);

        jLabelEmpleados.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelEmpleados.setText("Lista de Empleados");
        jPanelSalidas.add(jLabelEmpleados);
        jLabelEmpleados.setBounds(380, 150, 120, 16);

        jLabelNotas.setText("Notas:");
        jPanelSalidas.add(jLabelNotas);
        jLabelNotas.setBounds(10, 120, 50, 16);

        jLabelTiempoEnParking.setText("Tiempo en Parking:");
        jPanelSalidas.add(jLabelTiempoEnParking);
        jLabelTiempoEnParking.setBounds(10, 220, 110, 16);

        jLabelTiempoEnParkingRespuesta.setText("---");
        jPanelSalidas.add(jLabelTiempoEnParkingRespuesta);
        jLabelTiempoEnParkingRespuesta.setBounds(120, 220, 250, 16);
        jPanelSalidas.add(jTextFieldNotas);
        jTextFieldNotas.setBounds(60, 120, 160, 70);

        jLabelTieneContratoRespuesta.setText("---");
        jPanelSalidas.add(jLabelTieneContratoRespuesta);
        jLabelTieneContratoRespuesta.setBounds(120, 200, 120, 16);

        jLabelTieneContrato.setText("Tiene Contrato:");
        jPanelSalidas.add(jLabelTieneContrato);
        jLabelTieneContrato.setBounds(10, 200, 110, 16);

        jLabelFecha1.setText("Fecha:");
        jPanelSalidas.add(jLabelFecha1);
        jLabelFecha1.setBounds(10, 40, 50, 16);

        jLabelFecha2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelFecha2.setText("Datos de la Salida");
        jPanelSalidas.add(jLabelFecha2);
        jLabelFecha2.setBounds(10, 10, 110, 16);

        jLabelFecha3.setText("dd/mm/yyyy");
        jPanelSalidas.add(jLabelFecha3);
        jLabelFecha3.setBounds(230, 40, 110, 16);

        getContentPane().add(jPanelSalidas);
        jPanelSalidas.setBounds(0, 0, 570, 320);

        setBounds(0, 0, 584, 329);
    }// </editor-fold>//GEN-END:initComponents

    private void jListEntradasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListEntradasValueChanged
        if (!evt.getValueIsAdjusting()) {
            vehiculoTieneContrato();
            vehiculoTiempoEnParking();
        }
    }//GEN-LAST:event_jListEntradasValueChanged

    private void vehiculoTieneContrato() {
        Entrada entrada = (Entrada) jListEntradas.getSelectedValue();

        if (entrada != null) {
            try {
                Vehiculo vehiculo = entrada.getVehiculo();
                if (sistema.vehiculoTieneContrato(vehiculo)) {
                    jLabelTieneContratoRespuesta.setText("SI");
                } else {
                    jLabelTieneContratoRespuesta.setText("NO");
                }
            } catch (Exception e) {
                ClaroOscuro.mostrarError(this, "Error al cargar datos del vehiculo: " + e.getMessage(),
                        "Error");
            }
        }
    }

    private void vehiculoTiempoEnParking() {
        Entrada entrada = (Entrada) jListEntradas.getSelectedValue();

        if (entrada != null) {
            try {
                Vehiculo vehiculo = entrada.getVehiculo();
                if (vehiculo != null) {
                    jLabelTiempoEnParkingRespuesta.setText(sistema.vehiculoTiempoEnParking(vehiculo) + "");
                }
            } catch (Exception e) {
                ClaroOscuro.mostrarError(this, "Error al cargar datos del vehiculo: " + e.getMessage(),
                        "Error");
            }
        }
    }
    
    private void actualizarListaEntradas() {
        ArrayList<Entrada> entradas = sistema.getEntradasSinSalida();
        jListEntradas.setListData(entradas.toArray());
    }
    
    private void actualizarListaEmpleados() {
        ArrayList<Empleado> empleados = sistema.getListaEmpleados();
        jListEmpleados.setListData(empleados.toArray());
    }
    
    private void limpiarCampos(){
        jTextFieldFecha.setText("");
        jTextFieldHora.setText("");
        jTextFieldNotas.setText("");
        jLabelTieneContratoRespuesta.setText("---");
        jLabelTiempoEnParkingRespuesta.setText("---");
                
        jListEntradas.clearSelection();
        jListEmpleados.clearSelection();
    }
    

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            String fecha = jTextFieldFecha.getText();
            String hora = jTextFieldHora.getText();
            String notas = jTextFieldNotas.getText();

            Empleado empleadoSeleccionado = (Empleado) jListEmpleados.getSelectedValue();
            Entrada entradaSeleccionada = (Entrada) jListEntradas.getSelectedValue();

            String cedulaEmpleadoStr = "";
            String matriculaVehiculoEntrada = "";

            if (empleadoSeleccionado != null) {
                cedulaEmpleadoStr = String.valueOf(empleadoSeleccionado.getCedula());
            }
            if (entradaSeleccionada != null) {
                matriculaVehiculoEntrada = entradaSeleccionada.getVehiculo().getMatricula();
            }

            // Validar que los campos no estén vacíos y tengan el formato correcto
            ValidadorFechaHora.validarFecha(fecha);
            ValidadorFechaHora.validarHora(hora);

            if (notas == null) { // Las notas pueden estar vacías
                notas = "";
            }
            if (cedulaEmpleadoStr == null || cedulaEmpleadoStr.trim().isEmpty()) {
                throw new Exception("Debe seleccionar un empleado");
            }
            if (matriculaVehiculoEntrada == null || matriculaVehiculoEntrada.trim().isEmpty()) {
                throw new Exception("Debe seleccionar una entrada");
            }

            // Convertir cédulas
            int cedulaEmpleado;

            try {
                cedulaEmpleado = Integer.parseInt(cedulaEmpleadoStr);
            } catch (NumberFormatException e) {
                throw new Exception("La cédula del empleado debe ser un número válido");
            }

            // Buscar en sistema
            Empleado empleado = sistema.buscarEmpleadoPorCedula(cedulaEmpleado);
            if (empleado == null) {
                throw new Exception("El empleado seleccionado no existe");
            }

            Vehiculo vehiculo = sistema.buscarVehiculoPorMatricula(matriculaVehiculoEntrada);
            if (vehiculo == null) {
                throw new Exception("El vehículo seleccionado no existe");
            }

            Entrada entrada = sistema.buscarEntradaPorMatricula(matriculaVehiculoEntrada);
            if (entrada == null) {
                throw new Exception("No se encontró una entrada activa para el vehículo seleccionado");
            }

            //Validar que fecha/hora de salida sea posterior a la de entrada
            ValidadorFechaHora.validarFechaHoraPosterior(entrada.getFecha(), entrada.getHora(), fecha, hora);

            // Verificar unicidad
            if (!sistema.vehiculoEstaEnParking(matriculaVehiculoEntrada)) {
                throw new Exception("El vehículo no está en el parking");
            }

            // Crear y registrar
            Salida salida = new Salida(0, fecha, hora, notas, empleado, vehiculo);
            boolean resultado = sistema.registrarSalida(salida, entrada);

            if (!resultado) {
                throw new Exception("No se pudo registrar la salida");
            }

            ClaroOscuro.mostrarMensaje(this, "Salida agregada con éxito", "Éxito");

            limpiarCampos();

        } catch (Exception e) {
            ClaroOscuro.mostrarError(this, e.getMessage(), "Error");
        }
    }
//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonVaciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVaciarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_jButtonVaciarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonVaciar;
    private javax.swing.JLabel jLabelEmpleados;
    private javax.swing.JLabel jLabelEntradas;
    private javax.swing.JLabel jLabelFecha;
    private javax.swing.JLabel jLabelFecha1;
    private javax.swing.JLabel jLabelFecha2;
    private javax.swing.JLabel jLabelFecha3;
    private javax.swing.JLabel jLabelHora;
    private javax.swing.JLabel jLabelNotas;
    private javax.swing.JLabel jLabelTiempoEnParking;
    private javax.swing.JLabel jLabelTiempoEnParkingRespuesta;
    private javax.swing.JLabel jLabelTieneContrato;
    private javax.swing.JLabel jLabelTieneContratoRespuesta;    private javax.swing.JList jListEmpleados;
    private javax.swing.JList jListEntradas;
    private javax.swing.JPanel jPanelSalidas;
    private javax.swing.JScrollPane jScrollPaneEmpleados;
    private javax.swing.JScrollPane jScrollPaneEntradas;
    private javax.swing.JTextField jTextFieldFecha;
    private javax.swing.JTextField jTextFieldHora;
    private javax.swing.JTextField jTextFieldNotas;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        // TODO Auto-generated method stub
        String propertyName = evt.getPropertyName();

        if ("entradaCreada".equals(propertyName) || "salidaCreada".equals(propertyName)) {
            actualizarListaEntradas();
        } else if ("empleadoCreado".equals(propertyName) || "empleadoEliminado".equals(propertyName)) {
            actualizarListaEmpleados();
        } else if ("contratoCreado".equals(propertyName) || "contratoEliminado".equals(propertyName)){
            if (jListEntradas.getSelectedValue() != null) {
                vehiculoTieneContrato();
            }
        }
    }
}