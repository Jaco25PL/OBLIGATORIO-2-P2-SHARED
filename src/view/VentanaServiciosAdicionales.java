/**
 * Autores: [Matias Piedra 354007] y [Joaquin Piedra 304804]
 */
package view;

import controlador.ServicioAdicionalControlador;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import model.Empleado;
import model.ServicioAdicional;
import model.Vehiculo;
// import observer.SistemaObserver;

// public class VentanaServiciosAdicionales extends javax.swing.JFrame implements SistemaObserver{
public class VentanaServiciosAdicionales extends javax.swing.JFrame implements PropertyChangeListener{

    private ServicioAdicionalControlador controlador;
    
    public VentanaServiciosAdicionales(ServicioAdicionalControlador controlador) {
        this.controlador = controlador;
        
        initComponents();
        
        // controlador.getSistema().addObserver(this);
        controlador.getSistema().addPropertyChangeListener(this);
        
        jComboBoxServicio.removeAllItems();
        jComboBoxServicio.addItem("Lavado");
        jComboBoxServicio.addItem("Cambio de rueda");
        jComboBoxServicio.addItem("Limpieza de tapizado");
        jComboBoxServicio.addItem("Cambio de luces");
        jComboBoxServicio.addItem("Otro");
        
        jTextFieldFecha.setText(controlador.getFechaActual());
        jTextFieldHora.setText(controlador.getHoraActual());
        
        actualizarListaVehiculos();
        actualizarListaEmpleados();
        actualizarListaServicios();
        
        jButtonEliminar.setVisible(false);
        
        ClaroOscuro.aplicarModo(this);
        
        //Listener para la Lista
        jListServiciosRealizados.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            @Override
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                if (!evt.getValueIsAdjusting()) {
                    mostrarServicioSeleccionado();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelServiciosAdicionales = new javax.swing.JPanel();
        jLabelFecha = new javax.swing.JLabel();
        jButtonVaciar = new javax.swing.JButton();
        jButtonAgregar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jTextFieldFecha = new javax.swing.JTextField();
        jTextFieldHora = new javax.swing.JTextField();
        jLabelHora = new javax.swing.JLabel();
        jScrollPaneVehiculos = new javax.swing.JScrollPane();
        jListVehiculos = new javax.swing.JList<>();
        jLabelVehiculos = new javax.swing.JLabel();
        jScrollPaneEmpleados = new javax.swing.JScrollPane();
        jListEmpleados = new javax.swing.JList<>();
        jLabelEmpleados = new javax.swing.JLabel();
        jLabelNotas = new javax.swing.JLabel();
        jComboBoxServicio = new javax.swing.JComboBox<>();
        jScrollPaneServiciosRealizadps = new javax.swing.JScrollPane();
        jListServiciosRealizados = new javax.swing.JList<>();
        jLabelServiciosRealizados = new javax.swing.JLabel();
        jLabelCosto = new javax.swing.JLabel();
        jTextFieldCosto = new javax.swing.JTextField();
        jTextFieldVehiculo = new javax.swing.JTextField();
        jTextFieldEmpleado = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Servicios Adicionales");
        getContentPane().setLayout(null);

        jPanelServiciosAdicionales.setLayout(null);

        jLabelFecha.setText("Fecha");
        jPanelServiciosAdicionales.add(jLabelFecha);
        jLabelFecha.setBounds(30, 70, 50, 16);

        jButtonVaciar.setText("Vaciar");
        jButtonVaciar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonVaciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVaciarActionPerformed(evt);
            }
        });
        jPanelServiciosAdicionales.add(jButtonVaciar);
        jButtonVaciar.setBounds(40, 290, 90, 27);

        jButtonAgregar.setText("Agregar");
        jButtonAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });
        jPanelServiciosAdicionales.add(jButtonAgregar);
        jButtonAgregar.setBounds(150, 290, 170, 27);

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        jPanelServiciosAdicionales.add(jButtonEliminar);
        jButtonEliminar.setBounds(340, 290, 130, 27);
        jPanelServiciosAdicionales.add(jTextFieldFecha);
        jTextFieldFecha.setBounds(80, 70, 70, 26);
        jPanelServiciosAdicionales.add(jTextFieldHora);
        jTextFieldHora.setBounds(80, 110, 68, 26);

        jLabelHora.setText("Hora");
        jPanelServiciosAdicionales.add(jLabelHora);
        jLabelHora.setBounds(30, 110, 50, 16);

        jListVehiculos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPaneVehiculos.setViewportView(jListVehiculos);

        jPanelServiciosAdicionales.add(jScrollPaneVehiculos);
        jScrollPaneVehiculos.setBounds(160, 100, 100, 150);

        jLabelVehiculos.setText("Vehiculos");
        jPanelServiciosAdicionales.add(jLabelVehiculos);
        jLabelVehiculos.setBounds(170, 70, 60, 16);

        jListEmpleados.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPaneEmpleados.setViewportView(jListEmpleados);

        jPanelServiciosAdicionales.add(jScrollPaneEmpleados);
        jScrollPaneEmpleados.setBounds(270, 100, 100, 150);

        jLabelEmpleados.setText("Empleados");
        jPanelServiciosAdicionales.add(jLabelEmpleados);
        jLabelEmpleados.setBounds(270, 70, 60, 16);

        jLabelNotas.setText("Servicio");
        jPanelServiciosAdicionales.add(jLabelNotas);
        jLabelNotas.setBounds(30, 150, 50, 16);

        jComboBoxServicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanelServiciosAdicionales.add(jComboBoxServicio);
        jComboBoxServicio.setBounds(80, 150, 76, 26);

        jListServiciosRealizados.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListServiciosRealizados.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jListServiciosRealizadosPropertyChange(evt);
            }
        });
        jListServiciosRealizados.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListServiciosRealizadosValueChanged(evt);
            }
        });
        jScrollPaneServiciosRealizadps.setViewportView(jListServiciosRealizados);

        jPanelServiciosAdicionales.add(jScrollPaneServiciosRealizadps);
        jScrollPaneServiciosRealizadps.setBounds(380, 100, 100, 150);

        jLabelServiciosRealizados.setText("Servicios Realizados");
        jPanelServiciosAdicionales.add(jLabelServiciosRealizados);
        jLabelServiciosRealizados.setBounds(380, 70, 110, 16);

        jLabelCosto.setText("Costo");
        jPanelServiciosAdicionales.add(jLabelCosto);
        jLabelCosto.setBounds(30, 190, 50, 16);
        jPanelServiciosAdicionales.add(jTextFieldCosto);
        jTextFieldCosto.setBounds(80, 190, 70, 26);
        jPanelServiciosAdicionales.add(jTextFieldVehiculo);
        jTextFieldVehiculo.setBounds(160, 250, 100, 26);
        jPanelServiciosAdicionales.add(jTextFieldEmpleado);
        jTextFieldEmpleado.setBounds(270, 250, 100, 26);

        getContentPane().add(jPanelServiciosAdicionales);
        jPanelServiciosAdicionales.setBounds(0, 0, 500, 350);

        setBounds(0, 0, 514, 358);
    }// </editor-fold>//GEN-END:initComponents

    public void mostrarServicioSeleccionado(){
        String seleccionado = jListServiciosRealizados.getSelectedValue();

        if (seleccionado != null) {
            try {
                String matricula = seleccionado.split(" - ")[1];
                ServicioAdicional servicio = controlador.buscarServicioPorMatricula(matricula);

                if (servicio != null) {
                    jTextFieldVehiculo.setText(servicio.getVehiculo().getMarca() + " "
                            + servicio.getVehiculo().getModelo() + " - "
                            + servicio.getVehiculo().getMatricula());

                    jTextFieldEmpleado.setText(servicio.getEmpleado().getNombre() + " - "
                            + servicio.getEmpleado().getCedula());
                    
                    jComboBoxServicio.setSelectedItem(servicio.getTipoServicio());
                    jTextFieldFecha.setText(servicio.getFecha());
                    jTextFieldHora.setText(servicio.getHora());
                    jTextFieldCosto.setText(String.valueOf(servicio.getCostoServicio()));
                    
                }
            } catch (Exception e) {
                ClaroOscuro.mostrarError(this, "Error al cargar datos del servicio: " 
                    + e.getMessage(), "Error");
            }
        }
    }
    
    private void actualizarListaVehiculos(){
        ArrayList<Vehiculo> vehiculos = controlador.getListaVehiculos();
        DefaultListModel<String> modelo = new DefaultListModel<>();

        for (int i = 0; i < vehiculos.size(); i++) {
            Vehiculo vehiculo = vehiculos.get(i);
            modelo.addElement(vehiculo.getMarca() + " " + vehiculo.getModelo() 
                + " - " + vehiculo.getMatricula());
        }

        jListVehiculos.setModel(modelo);
    }
    
    private void actualizarListaEmpleados(){
        ArrayList<Empleado> empleados = controlador.getListaEmpleados();
        DefaultListModel<String> modelo = new DefaultListModel<>();

        for (int i = 0; i < empleados.size(); i++) {
            Empleado empleado = empleados.get(i);
            modelo.addElement(empleado.getNombre() + " - " + empleado.getCedula());
        }

        jListEmpleados.setModel(modelo);
    }
    private void actualizarListaServicios(){
        ArrayList<ServicioAdicional> serviciosAdicionales = controlador.getListaServicios();
        DefaultListModel<String> modelo = new DefaultListModel<>();

        for (int i = 0; i < serviciosAdicionales.size(); i++) {
            ServicioAdicional servicioAdicional = serviciosAdicionales.get(i);
            modelo.addElement(servicioAdicional.getTipoServicio() + " - " + servicioAdicional.getVehiculo().getMatricula());
        }

        jListServiciosRealizados.setModel(modelo);
    }
    
    private void limpiarCampos(){
        jTextFieldFecha.setText("");
        jTextFieldHora.setText("");
        jTextFieldCosto.setText("");
        jTextFieldVehiculo.setText("");
        jTextFieldEmpleado.setText("");
        jComboBoxServicio.setSelectedIndex(0);
        jListVehiculos.clearSelection();
        jListEmpleados.clearSelection();
        jListServiciosRealizados.clearSelection();
    }
    
    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        
        try {
            String tipoServicio = (String) jComboBoxServicio.getSelectedItem();
            String fecha = jTextFieldFecha.getText();
            String hora = jTextFieldHora.getText();
            String costo = jTextFieldCosto.getText();

            String empleadoSeleccionado = jListEmpleados.getSelectedValue();
            String vehiculoSeleccionado = jListVehiculos.getSelectedValue();

            String cedulaEmpleado = "";
            String matriculaVehiculo = "";

            if (empleadoSeleccionado != null) {
                cedulaEmpleado = empleadoSeleccionado.split(" - ")[1];
            }
            if (vehiculoSeleccionado != null) {
                matriculaVehiculo = vehiculoSeleccionado.split(" - ")[1];
            }

            controlador.registrarServicio(tipoServicio, fecha, hora, cedulaEmpleado, matriculaVehiculo, costo);

            actualizarListaServicios();

            // JOptionPane.showMessageDialog(this, "Entrada agregada con éxito");
            ClaroOscuro.mostrarMensaje(this, "Servicio adicional agregado con éxito", "Éxito");

            limpiarCampos();

        } catch (Exception e) {
            // JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            ClaroOscuro.mostrarError(this, e.getMessage(), "Error");

        }
        
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonVaciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVaciarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_jButtonVaciarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jListServiciosRealizadosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jListServiciosRealizadosPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jListServiciosRealizadosPropertyChange

    private void jListServiciosRealizadosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListServiciosRealizadosValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jListServiciosRealizadosValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonVaciar;
    private javax.swing.JComboBox<String> jComboBoxServicio;
    private javax.swing.JLabel jLabelCosto;
    private javax.swing.JLabel jLabelEmpleados;
    private javax.swing.JLabel jLabelFecha;
    private javax.swing.JLabel jLabelHora;
    private javax.swing.JLabel jLabelNotas;
    private javax.swing.JLabel jLabelServiciosRealizados;
    private javax.swing.JLabel jLabelVehiculos;
    private javax.swing.JList<String> jListEmpleados;
    private javax.swing.JList<String> jListServiciosRealizados;
    private javax.swing.JList<String> jListVehiculos;
    private javax.swing.JPanel jPanelServiciosAdicionales;
    private javax.swing.JScrollPane jScrollPaneEmpleados;
    private javax.swing.JScrollPane jScrollPaneServiciosRealizadps;
    private javax.swing.JScrollPane jScrollPaneVehiculos;
    private javax.swing.JTextField jTextFieldCosto;
    private javax.swing.JTextField jTextFieldEmpleado;
    private javax.swing.JTextField jTextFieldFecha;
    private javax.swing.JTextField jTextFieldHora;
    private javax.swing.JTextField jTextFieldVehiculo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        String propertyName = evt.getPropertyName();
        
        // Vehículos
        if ("vehiculoCreado".equals(propertyName) || "vehiculoEliminado".equals(propertyName)) {
            actualizarListaVehiculos();
        } 
        // Empleados
        else if ("empleadoCreado".equals(propertyName) || "empleadoEliminado".equals(propertyName)) {
            actualizarListaEmpleados();
        }
        // Servicios adicionales (este es el que falta implementar en Sistema)
        else if ("servicioCreado".equals(propertyName)) {
            actualizarListaServicios();
        }
    }

    // @Override
    // public void onClienteEliminado() {
    // }

    // @Override
    // public void onClienteCreado() {
    // }

    // @Override
    // public void onVehiculoEliminado() {
    //     actualizarListaVehiculos();
    // }

    // @Override
    // public void onVehiculoCreado() {
    //     actualizarListaVehiculos();
    // }

    // @Override
    // public void onEmpleadoEliminado() {
    //     actualizarListaEmpleados();
    // }

    // @Override
    // public void onEmpleadoCreado() {
    //     actualizarListaEmpleados();
    // }

    // @Override
    // public void onContratoEliminado() {
    // }

    // @Override
    // public void onContratoCreado() {
    // }

    // @Override
    // public void onEntradaCreada() {
    // }

    // @Override
    // public void onSalidaCreada() {
    // }
}
